{"version":3,"sources":["navbar/navbar.tsx","assets/images/zidane.png","components/player-card/player-card.tsx","components/players-container/dummy-players.ts","components/players-container/players-container.tsx","main-page/main-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","brandName","bg","expand","sticky","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","PlayerCard","playerId","playerDetails","Card","Img","variant","src","player","Body","Title","Text","Button","dummy_players","name","details","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","PlayerContainer","swipeable","draggable","showDots","autoPlay","autoPlaySpeed","keyBoardControl","transitionDuration","containerClass","removeArrowOnDeviceType","renderButtonGroupOutside","renderDotsOutside","dotListClass","itemClass","map","MainPage","Container","as","Row","Col","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAkCeA,G,MA1BuB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvC,OACE,eAAC,IAAD,CAAUC,GAAG,QAAQC,OAAO,KAAKC,OAAO,MAAxC,UACE,cAAC,IAASC,MAAV,CAAgBC,UAAU,mBAAmBC,KAAK,QAAlD,SAA2DN,IAC3D,cAAC,IAASO,OAAV,CAAiBC,gBAAc,qBAC/B,eAAC,IAASC,SAAV,CAAmBC,GAAG,mBAAtB,UACE,eAACC,EAAA,EAAD,CAAKN,UAAU,UAAf,UACE,cAACM,EAAA,EAAIC,KAAL,CAAUN,KAAK,QAAf,kBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,QAAf,qBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,qBAAjC,UACE,cAACG,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,oBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,uBACA,cAACO,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,kCAKJ,cAACK,EAAA,EAAD,CAAKN,UAAU,UAAf,SACE,cAACM,EAAA,EAAIC,KAAL,CAAUN,KAAK,QAAf,gC,gDC3BK,G,MAAA,IAA0B,oCC4B1BW,EAlB+B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACzD,OACE,eAACC,EAAA,EAAD,CAAMf,UAAU,OAAhB,UACI,cAACe,EAAA,EAAKC,IAAN,CAAUhB,UAAU,eAAeiB,QAAQ,MAAMC,IAAKC,IACtD,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaR,IACb,cAACE,EAAA,EAAKO,KAAN,UAAYR,IACZ,qBAAKd,UAAU,6BAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,cAACuB,EAAA,EAAD,CAAQvB,UAAU,iBAAiBiB,QAAQ,QAA3C,kBACA,cAACM,EAAA,EAAD,CAAQvB,UAAU,iBAAiBiB,QAAQ,UAA3C,6BClBDO,EAA4B,CACvC,CACEC,KAAM,cACNC,QAAS,kBACTrB,GAAI,eAEN,CACEoB,KAAM,QACNC,QAAS,kBACTrB,GAAI,SAEN,CACEoB,KAAM,UACNC,QAAS,kBACTrB,GAAI,WAEN,CACEoB,KAAM,QACNC,QAAS,kBACTrB,GAAI,U,yBCbFsB,G,MAAa,CACjBC,QAAS,CACPC,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,EACPC,cAAe,GAEjBC,OAAQ,CACNL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,EACPC,cAAe,GAEjBE,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,EACPC,cAAe,KAgCJG,EAzByC,SAAC,GAAkB,EAAhBzC,UACzD,OACE,cAAC,IAAD,CACE0C,WAAS,EACTC,WAAS,EACTC,UAAU,EACVZ,WAAYA,EACZa,UAAU,EACVC,cAAe,IACfC,iBAAiB,EACjBC,mBAAoB,IACpBC,eAAe,qBACfC,wBAAyB,CAAC,SAAU,UACpCC,0BAA0B,EAC1BC,mBAAiB,EACjBC,aAAa,wBACbC,UAAU,8BAdZ,SAgBGzB,EAAc0B,KAAI,SAAC/B,GAAD,OACjB,cAAC,EAAD,CAAYN,SAAUM,EAAOd,GAAIS,cAAeK,EAAOO,gBC3BhDyB,G,MAZ2B,SAAC,GAAkB,EAAhBxD,UAC3C,OACE,cAACyD,EAAA,EAAD,CAAWC,GAAG,OAAd,SACE,cAACC,EAAA,EAAD,CAAKtD,UAAU,YAAf,SACE,cAACuD,EAAA,EAAD,UACE,cAAC,EAAD,YCGKC,MAXf,WACE,OACE,cAAC,IAAD,UACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,EAAD,CAAQL,UAAU,UAClB,cAAC,EAAD,UCGO8D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dcd236d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar as BSNavbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport \"./navbar.scss\";\r\n\r\ninterface NavbarProps {\r\n  brandName?: string;\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ brandName }) => {\r\n  return (\r\n    <BSNavbar bg=\"light\" expand=\"lg\" sticky=\"top\">\r\n      <BSNavbar.Brand className=\"font-weight-bold\" href=\"#home\">{brandName}</BSNavbar.Brand>\r\n      <BSNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <BSNavbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Home</Nav.Link>\r\n          <Nav.Link href=\"#link\">Players</Nav.Link>\r\n          <NavDropdown title=\"About us\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href=\"#action/3.1\">People</NavDropdown.Item>\r\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"#action/3.4\">\r\n              Something else\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"#home\">Settings</Nav.Link>\r\n        </Nav>\r\n      </BSNavbar.Collapse>\r\n    </BSNavbar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/zidane.f302add7.png\";","import React from \"react\";\r\nimport { Button, Card, Col } from \"react-bootstrap\";\r\nimport \"./player-card.scss\";\r\nimport player from \"../../assets/images/zidane.png\";\r\n\r\ninterface PlayerCardProps {\r\n  playerId: string;\r\n  playerDetails?: string;\r\n}\r\n\r\nconst PlayerCard: React.FC<PlayerCardProps> = ({ playerId, playerDetails }) => {\r\n  return (\r\n    <Card className=\"mx-2\">\r\n        <Card.Img className=\"player-image\" variant=\"top\" src={player} />\r\n        <Card.Body>\r\n          <Card.Title>{playerId}</Card.Title>\r\n          <Card.Text>{playerDetails}</Card.Text>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <Button className=\"mx-1 py-0 px-3\" variant=\"light\">Sell</Button>\r\n              <Button className=\"mx-1 py-0 px-3\" variant=\"primary\">Buy</Button>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PlayerCard;\r\n","import { IPlayers } from \"../../models\";\r\n\r\nexport const dummy_players: IPlayers[] = [\r\n  {\r\n    name: \"Rama Hruday\",\r\n    details: \"Actual; metrics\",\r\n    id: \"Rama Hruday\",\r\n  },\r\n  {\r\n    name: \"Messi\",\r\n    details: \"Actual; metrics\",\r\n    id: \"Messi\",\r\n  },\r\n  {\r\n    name: \"Ronaldo\",\r\n    details: \"Actual; metrics\",\r\n    id: \"Ronaldo\",\r\n  },\r\n  {\r\n    name: \"Salah\",\r\n    details: \"Actual; metrics\",\r\n    id: \"Salah\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Button, Card,  Col } from \"react-bootstrap\";\r\nimport PlayerCard from \"../player-card/player-card\";\r\nimport { dummy_players } from \"./dummy-players\";\r\nimport \"./players-container.scss\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 3,\r\n    slidesToSlide: 3, // optional, default to 1.\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 2,\r\n    slidesToSlide: 2, // optional, default to 1.\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 1,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n};\r\ninterface PlayerContainerProps {\r\n  brandName?: string;\r\n}\r\n\r\nconst PlayerContainer: React.FC<PlayerContainerProps> = ({ brandName }) => {\r\n  return (\r\n    <Carousel\r\n      swipeable\r\n      draggable\r\n      showDots={true}\r\n      responsive={responsive}\r\n      autoPlay={true}\r\n      autoPlaySpeed={3000}\r\n      keyBoardControl={true}\r\n      transitionDuration={500}\r\n      containerClass=\"carousel-container\"\r\n      removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n      renderButtonGroupOutside={true}\r\n      renderDotsOutside\r\n      dotListClass=\"custom-dot-list-style\"\r\n      itemClass=\"carousel-item-padding-40-px\"\r\n    >\r\n      {dummy_players.map((player) => (\r\n        <PlayerCard playerId={player.id} playerDetails={player.details} />\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default PlayerContainer;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport PlayerContainer from \"../components/players-container/players-container\";\r\nimport \"./main-page.scss\";\r\n\r\ninterface MainPageProps {\r\n  brandName?: string;\r\n}\r\n\r\nconst MainPage: React.FC<MainPageProps> = ({ brandName }) => {\r\n  return (\r\n    <Container as=\"main\">\r\n      <Row className=\"my-2 py-5\">\r\n        <Col>\r\n          <PlayerContainer />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./navbar/navbar\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainPage from \"./main-page/main-page\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar brandName=\"SMARC\" />\n        <MainPage />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// <Card style={{ width: '18rem' }}>\n//   <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n//   <Card.Body>\n//     <Card.Title>Card Title</Card.Title>\n//     <Card.Text>\n//       Some quick example text to build on the card title and make up the bulk of\n//       the card's content.\n//     </Card.Text>\n//     <Button variant=\"primary\">Go somewhere</Button>\n//   </Card.Body>\n// </Card>\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}